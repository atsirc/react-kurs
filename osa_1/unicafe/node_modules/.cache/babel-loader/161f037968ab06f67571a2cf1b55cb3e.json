{"ast":null,"code":"var _jsxFileName = \"/home/christa/Documents/kod/react-kurs/part_1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  text,\n  clickHandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Header = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Header;\n\nconst Results = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const total = good + neutral + bad;\n  const average = (good - bad) / total;\n  const persentage = good / total + \"%\";\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"netural \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"positive \", persentage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Results;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      clickHandler: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      clickHandler: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      clickHandler: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Results\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/christa/Documents/kod/react-kurs/part_1/unicafe/src/App.js"],"names":["React","useState","Button","text","clickHandler","Header","Results","good","neutral","bad","total","average","persentage","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AACxC,sBACC;AAAQ,IAAA,OAAO,EAAEA,YAAjB;AAAA,cACED;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;KAAMD,M;;AAQN,MAAMG,MAAM,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAY;AAC1B,sBACC;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAJD;;MAAME,M;;AAMN,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AACzC,QAAMC,KAAK,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,QAAME,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAaC,KAA7B;AACA,QAAME,UAAU,GAAGL,IAAI,GAAGG,KAAP,GAAe,GAAlC;AACA,sBACC;AAAA,4BACC;AAAA,0BAAUH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,yBAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA,yBAASC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,6BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,8BAAcC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAdD;;MAAMN,O;;AAgBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACC,QAAM,CAACO,OAAD,EAAUO,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMO,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACA;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,YAAY,EAAE,MAAIa,OAAO,CAACP,IAAI,GAAE,CAAP;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,YAAY,EAAE,MAAIQ,UAAU,CAACP,OAAO,GAAC,CAAT;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,MAAA,YAAY,EAAE,MAAIQ,MAAM,CAACP,GAAG,GAAC,CAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALD,eAMC,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEF,IAAf;AAAqB,MAAA,OAAO,EAAEC,OAA9B;AAAuC,MAAA,GAAG,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUD,CAfD;;GAAMI,G;;MAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\"\n\nconst Button = ({text, clickHandler}) => {\n\treturn (\n\t\t<button onClick={clickHandler}>\n\t\t\t{text}\n\t\t</button>\n\t)\n}\n\nconst Header = ({text}) => {\n\treturn (\n\t\t<h1>{text}</h1>\n\t)\n}\n\nconst Results = ({good, neutral, bad}) => {\n\tconst total = good + neutral + bad\n\tconst average = (good - bad)/total\n\tconst persentage = good / total + \"%\"\n\treturn (\n\t\t<ul>\n\t\t\t<li>good {good}</li>\n\t\t\t<li>netural {neutral}</li>\n\t\t\t<li>bad {bad}</li>\n\t\t\t<li>all {total}</li>\n\t\t\t<li>average {average}</li>\n\t\t\t<li>positive {persentage}</li>\n\t\t</ul>\n\t)\n}\n\nconst App = () => {\n\tconst [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  return (\n\t\t<div>\n\t\t\t<Header text=\"give feedback\"/>\n\t\t\t<Button text=\"good\" clickHandler={()=>setGood(good +1)}/>\n\t\t\t<Button text=\"neutral\" clickHandler={()=>setNeutral(neutral+1)}/>\n\t\t\t<Button text=\"bad\" clickHandler={()=>setBad(bad+1)}/>\n\t\t\t<Header text=\"statistics\"/>\n\t\t\t<Results good={good} neutral={neutral} bad={bad}/>\n\t\t</div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}